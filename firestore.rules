rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Verifica se o usuário é admin
    function isAdmin() {
      return request.auth != null &&
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 0;
    }

    // Verifica se o usuário é comerciante
    function isBusinessPerson() {
      return request.auth != null &&
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 1;
    }

    // Regras para a coleção de usuários
    match /users/{userId} {
      // Permitir a criação de entregadores (role = 2) sem autenticação
      allow create: if request.resource.data.role == 2;

      // Apenas admins podem criar outros admins (role = 0)
      allow create: if request.auth != null && request.resource.data.role == 0 && isAdmin();

      // Permitir a criação de comerciantes (role = 1) sem autenticação
      allow create: if request.resource.data.role == 1;

      // O próprio usuário pode ler e atualizar seus próprios dados
      allow read, update: if request.auth != null && request.auth.uid == userId;

      // Apenas admins podem deletar usuários
      allow delete: if isAdmin();
    }

    // Regras para a coleção de clientes
    match /clients/{clientId} {
      // Permitir leitura e escrita para admin e comerciantes
      allow read, write: if isAdmin() || isBusinessPerson();

      // Regras para a subcoleção addresses dentro de clients
      match /addresses/{addressId} {
        // Permitir leitura e escrita para admin e comerciantes
        allow read, write: if isAdmin() || isBusinessPerson();
      }
    }
  }
}
